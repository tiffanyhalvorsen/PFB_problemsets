1. Sequences are ordered  objects.
2. Yes; strings are sequences. So the object:
dna = "GATGGGATTGGGGTTTTCCCCTCCCATGTGCTCAAGACTGGCGCTAAAAGTTTTGAGCTTCTCAAAAGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGCCCCCTCTGAGTCAGGAAACATTTTCAGACCTATGGAAACTACTTCCTGAAAACAACGTTCTGTCCCCCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTCCCCGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTCCCCCCGTGGCCCCTGCACCAGCAGCTCCTACACCGGCGGCCCCTGCACCAGCCCCCTCCTGGCCCCTGTCATCTTCTGTCCCTTCCCAGAAAACCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTCCCCTGCCCTCAACAAGATGTTTTGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACACCCCCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGCCCCCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGCCCCTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACTTTTCG" 

is a string.
>>> type(dna)
<class 'str'>

4. Use string method .count() to get total number of each nuclotide.

>>> dna.count('A')
167
>>> dna.count('C')
270
>>> dna.count('G')
218
>>> dna.count('T')
187

5.
 >>> bird = "chicken"
 >>> bird.upper()
'CHICKEN'

6. 

Script:

  1 #!/usr/bin/env python3
  2 
  3 import sys
  4 
  5 dna = sys.argv[1].upper()
  6 
  7 print(dna.count('A'), 'adenines', end = ' ')
  8 print(dna.count('T'), 'thymines', end = ' ')
  9 print(dna.count('C'), 'cytocines', end = ' ')
 10 print(dna.count('G'), 'guanines')  

Answer:

(base) pfb12@info12 problemsets % ./python_set3_script.py GATGGGATTggggttttccccTCCCATGTGCTCAAGACTGGCGCTaaaaGttttGAGCTTCTCaaaaGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCggggACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGccccCTCTGAGTCAGGAAACAttttCAGACCTATGGAAACTACTTCCTGaaaaCAACGTTCTGTccccCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTccccGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTccccCCGTGGccccTGCACCAGCAGCTCCTACACCGGCGGccccTGCACCAGccccCTCCTGGccccTGTCATCTTCTGTCCCTTCCCAGaaaaCCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTccccTGCCCTCAACAAGATGttttGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACAccccCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGccccCACCATGAGCGCTGCTCAGATAGCGATGGTCTGGccccTCCTCAGCATCTTATCCGAGTGGAAGGAAATTTGCGTGTGGAGTATTTGGATGACAGAAACACttttCG
167 adenines 187 thymines 270 cytocines 218 guanines

7. >>> dna.replace('T', 'U')
'GAUGGGAUUGGGGUUUUCCCCUCCCAUGUGCUCAAGACUGGCGCUAAAAGUUUUGAGCUUCUCAAAAGUCUAGAGCCACCGUCCAGGGAGCAGGUAGCUGCUGGGCUCCGGGGACACUUUGCGUUCGGGCUGGGAGCGUGCUUUCCACGACGGUGACACGCUUCCCUGGAUUGGCAGCCAGACUGCCUUCCGGGUCACUGCCAUGGAGGAGCCGCAGUCAGAUCCUAGCGUCGAGCCCCCUCUGAGUCAGGAAACAUUUUCAGACCUAUGGAAACUACUUCCUGAAAACAACGUUCUGUCCCCCUUGCCGUCCCAAGCAAUGGAUGAUUUGAUGCUGUCCCCGGACGAUAUUGAACAAUGGUUCACUGAAGACCCAGGUCCAGAUGAAGCUCCCAGAAUUCGCCAGAGGCUGCUCCCCCCGUGGCCCCUGCACCAGCAGCUCCUACACCGGCGGCCCCUGCACCAGCCCCCUCCUGGCCCCUGUCAUCUUCUGUCCCUUCCCAGAAAACCUACCAGGGCAGCUACGGUUUCCGUCUGGGCUUCUUGCAUUCUGGGACAGCCAAGUCUGUGACUUGCACGUACUCCCCUGCCCUCAACAAGAUGUUUUGCCAACUGGCCAAGACCUGCCCUGUGCAGCUGUGGGUUGAUUCCACACCCCCGCCCGGCACCCGCGUCCGCGCCAUGGCCAUCUACAAGCAGUCACAGCACAUGACGGAGGUUGUGAGGCGCUGCCCCCACCAUGAGCGCUGCUCAGAUAGCGAUGGUCUGGCCCCUCCUCAGCAUCUUAUCCGAGUGGAAGGAAAUUUGCGUGUGGAGUAUUUGGAUGACAGAAACACUUUUCG'

8. >>> dna.replace('T', 'U')
'GAUGGGAUUggggttttccccUCCCAUGUGCUCAAGACUGGCGCUaaaaGttttGAGCUUCUCaaaaGUCUAGAGCCACCGUCCAGGGAGCAGGUAGCUGCUGGGCUCCggggACACUUUGCGUUCGGGCUGGGAGCGUGCUUUCCACGACGGUGACACGCUUCCCUGGAUUGGCAGCCAGACUGCCUUCCGGGUCACUGCCAUGGAGGAGCCGCAGUCAGAUCCUAGCGUCGAGccccCUCUGAGUCAGGAAACAttttCAGACCUAUGGAAACUACUUCCUGaaaaCAACGUUCUGUccccCUUGCCGUCCCAAGCAAUGGAUGAUUUGAUGCUGUccccGGACGAUAUUGAACAAUGGUUCACUGAAGACCCAGGUCCAGAUGAAGCUCCCAGAAUUCGCCAGAGGCUGCUccccCCGUGGccccUGCACCAGCAGCUCCUACACCGGCGGccccUGCACCAGccccCUCCUGGccccUGUCAUCUUCUGUCCCUUCCCAGaaaaCCUACCAGGGCAGCUACGGUUUCCGUCUGGGCUUCUUGCAUUCUGGGACAGCCAAGUCUGUGACUUGCACGUACUccccUGCCCUCAACAAGAUGttttGCCAACUGGCCAAGACCUGCCCUGUGCAGCUGUGGGUUGAUUCCACAccccCGCCCGGCACCCGCGUCCGCGCCAUGGCCAUCUACAAGCAGUCACAGCACAUGACGGAGGUUGUGAGGCGCUGccccCACCAUGAGCGCU'

# Doesn't replace the lowercase t's.

9. Code for AT/GC content:

10.   1 #!/usr/bin/env python3
  2 
  3 import sys
  4 
  5 dna = sys.argv[1].upper()
  6 
  7 AT = (dna.count('T')+dna.count('A'))/len(dna)
  8 GC = (dna.count('G')+dna.count('C'))/len(dna)
  9 
 10 print(f'AT-content: {AT:.2f}', end='')
 11 print(f' GC-content: {GC:.2f}')
 12 

11. >>> dna[99:200]
'GCTGGGCTCCGGGGACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTG'

12. Used previous script to count all nt's. G's = 192
(base) pfb12@info12 problemsets % ./python_set3_ntcount.py GATGGGATTggggttttccccTCCCATGTGCTCAAGACTGGCGCTaaaaGttttGAGCTTCTCaaaaGTCTAGAGCCACCGTCCAGGGAGCAGGTAGCTGCTGGGCTCCggggACACTTTGCGTTCGGGCTGGGAGCGTGCTTTCCACGACGGTGACACGCTTCCCTGGATTGGCAGCCAGACTGCCTTCCGGGTCACTGCCATGGAGGAGCCGCAGTCAGATCCTAGCGTCGAGccccCTCTGAGTCAGGAAACAttttCAGACCTATGGAAACTACTTCCTGaaaaCAACGTTCTGTccccCTTGCCGTCCCAAGCAATGGATGATTTGATGCTGTccccGGACGATATTGAACAATGGTTCACTGAAGACCCAGGTCCAGATGAAGCTCCCAGAATTCGCCAGAGGCTGCTccccCCGTGGccccTGCACCAGCAGCTCCTACACCGGCGGccccTGCACCAGccccCTCCTGGccccTGTCATCTTCTGTCCCTTCCCAGaaaaCCTACCAGGGCAGCTACGGTTTCCGTCTGGGCTTCTTGCATTCTGGGACAGCCAAGTCTGTGACTTGCACGTACTccccTGCCCTCAACAAGATGttttGCCAACTGGCCAAGACCTGCCCTGTGCAGCTGTGGGTTGATTCCACAccccCGCCCGGCACCCGCGTCCGCGCCATGGCCATCTACAAGCAGTCACAGCACATGACGGAGGTTGTGAGGCGCTGccccCACCATGAGCGCT
145 adenines 161 thymines 250 cytocines 192 guanines

13. Script:

  1 #!/usr/bin/env python3
  2 
  3 import sys
  4 
  5 dna = sys.argv[1].upper()
  6 
  7 rev = dna[::-1]
  8 
  9 print(rev)

14. Code:

  1 #!/usr/bin/env python3
  2 
  3 import sys
  4 
  5 dna = sys.argv[1].upper()
  6 re_site = sys.argv[2].upper()
  7 
  8 if re_site in dna:
  9   print(f'EcoRI site found at nt position: {dna.find(re_site)+1} to {dna.find(re_site)+len(re_site)+1}    ')
 10 elif re_site[::-1] in dna:
 11   print(f'EcoRI reverse complement site found at nt position: {dna.find(re_site[::-1])+1} to {dna.find    (re_site)+len(re_site)+1}')
 12 else:
 13   print('No EcoRI restriction site found')

## Still need to fix the number that's reported for reverse complement (should start not from the end position.
